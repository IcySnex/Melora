<?xml version="1.0" encoding="utf-8" ?>
<Application
    x:Class="Musify.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="using:Musify.Converters"
    xmlns:ctr="using:Musify.Controls"
    xmlns:hlp="using:Musify.Helpers"
    xmlns:local="using:Musify"
    xmlns:mdl="using:Musify.Models"
    xmlns:wui="using:Windows.UI">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
            </ResourceDictionary.MergedDictionaries>

            <!--  Colors  -->
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <wui:Color x:Key="FadeScrollColor">#ffffff</wui:Color>
                    <wui:Color x:Key="FadeScrollTransparentColor">#00ffffff</wui:Color>
                </ResourceDictionary>

                <ResourceDictionary x:Key="Dark">
                    <wui:Color x:Key="FadeScrollColor">#2b2b2b</wui:Color>
                    <wui:Color x:Key="FadeScrollTransparentColor">#002b2b2b</wui:Color>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <wui:Color x:Key="FadeScrollColor">#2b2b2b</wui:Color>
            <wui:Color x:Key="FadeScrollTransparentColor">#002b2b2b</wui:Color>


            <!--  Converters  -->
            <conv:EnumIndexConverter x:Key="EnumIndexConverter" />
            <conv:TimeSpanStringConverter x:Key="TimeSpanStringConverter" />
            <conv:TimeSpanLongStringConverter x:Key="TimeSpanLongStringConverter" />
            <conv:IntIsZeroVisibilityConverter x:Key="IntIsZeroVisibilityConverter" />
            <conv:BoolFontIconChevronConverter x:Key="BoolFontIconChevronConverter" />
            <conv:PluginConfigDescriptionConverter x:Key="PluginConfigDescriptionConverter" />
            <conv:NullableIntDoubleConverter x:Key="NullableIntDoubleConverter" />
            <conv:DateTimeDateTimeOffsetConverter x:Key="DateTimeDateTimeOffsetConverter" />
            <conv:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
            <conv:InverseBoolVisibilityConverter x:Key="InverseBoolVisibilityConverter" />


            <!--  Colors  -->
            <AcrylicBrush
                x:Key="CardBackgroundAcrylicBrush"
                FallbackColor="{ThemeResource ControlSolidFillColorDefault}"
                TintColor="{ThemeResource LayerOnMicaBaseAltFillColorTertiary}"
                TintLuminosityOpacity="0.6"
                TintOpacity="0.4" />


            <!--  Styles  -->
            <Style x:Key="PageTitleTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}" />
                <Setter Property="FontSize" Value="28" />
                <Setter Property="Margin" Value="0,0,0,4" />
                <Setter Property="FontWeight" Value="Medium" />
            </Style>

            <Style BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Width" Value="76" />
            </Style>

            <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="CheckBox">
                <Setter Property="MinWidth" Value="0" />
            </Style>

            <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="TextBox">
                <Setter Property="Height" Value="32" />
            </Style>

            <Style x:Name="VerticalDivider" TargetType="Rectangle">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="2" />
                <Setter Property="RadiusX" Value="2" />
                <Setter Property="RadiusY" Value="2" />
                <Setter Property="Margin" Value="2,-5,0,-5" />
                <Setter Property="Fill" Value="{ThemeResource ControlStrokeColorDefault}" />
            </Style>

            <Style x:Name="HorizontalDivider" TargetType="Rectangle">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Height" Value="2" />
                <Setter Property="RadiusX" Value="2" />
                <Setter Property="RadiusY" Value="2" />
                <Setter Property="Margin" Value="-5,0" />
                <Setter Property="Fill" Value="{ThemeResource ControlStrokeColorDefault}" />
            </Style>

            <Style x:Key="HoverButtonStyle" TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="RootLayout"
                                Background="#b2000000"
                                Opacity="0">
                                <FontIcon Glyph="{TemplateBinding hlp:Attributes.Glyph}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TopHoverButtonStyle" TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Height" Value="55" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="RootLayout"
                                Height="55"
                                Background="Transparent"
                                Opacity="0">
                                <Border
                                    Margin="0,0,0,-55"
                                    CornerRadius="4"
                                    IsHitTestVisible="False">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0.15" Color="#e3000000" />
                                            <GradientStop Offset="1" Color="#88000000" />
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <FontIcon Glyph="{TemplateBinding hlp:Attributes.Glyph}" />
                                </Border>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BottomHoverButtonStyle" TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Height" Value="55" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                                x:Name="RootLayout"
                                Height="55"
                                Background="Transparent"
                                Opacity="0">
                                <Border
                                    Margin="0,-55,0,0"
                                    CornerRadius="4"
                                    IsHitTestVisible="False">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                            <GradientStop Offset="0.15" Color="#e3000000" />
                                            <GradientStop Offset="1" Color="#88000000" />
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <FontIcon Glyph="{TemplateBinding hlp:Attributes.Glyph}" />
                                </Border>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="RootLayout"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconButton" TargetType="Button">
                <Style.Setters>
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Button
                                    Padding="{TemplateBinding Padding}"
                                    Command="{TemplateBinding Command}"
                                    CommandParameter="{TemplateBinding CommandParameter}">
                                    <Viewbox Width="20" Height="20">
                                        <ContentPresenter />
                                    </Viewbox>
                                </Button>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="PlaceholderImage" TargetType="Border">
                <Style.Setters>
                    <Setter Property="Height" Value="50" />
                    <Setter Property="CornerRadius" Value="4" />
                    <Setter Property="VerticalAlignment" Value="Top" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush>
                                <GradientStop Offset="0" Color="#90606060" />
                                <GradientStop Offset="1" Color="#00606060" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>


            <!--  Templates  -->
            <ControlTemplate x:Key="PluginSettingsExpander" TargetType="ContentControl">
                <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <Expander.Header>
                        <Grid Margin="10,16">
                            <Viewbox
                                Width="25"
                                Height="25"
                                HorizontalAlignment="Left">
                                <PathIcon Data="{TemplateBinding hlp:Attributes.IconPathData}" />
                            </Viewbox>

                            <TextBlock
                                Margin="46,0,0,0"
                                Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"
                                Text="{TemplateBinding hlp:Attributes.Title}"
                                TextTrimming="CharacterEllipsis" />
                            <TextBlock
                                Margin="46,20,0,0"
                                Opacity="0.7"
                                Text="{TemplateBinding hlp:Attributes.Description}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </Expander.Header>

                    <ContentPresenter />
                </Expander>
            </ControlTemplate>

            <ControlTemplate x:Key="SettingsExpander" TargetType="ContentControl">
                <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <Expander.Header>
                        <Grid Margin="10,16">
                            <FontIcon
                                HorizontalAlignment="Left"
                                FontSize="25"
                                Glyph="{TemplateBinding hlp:Attributes.Glyph}" />

                            <TextBlock
                                Margin="46,0,0,0"
                                Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"
                                Text="{TemplateBinding hlp:Attributes.Title}"
                                TextTrimming="CharacterEllipsis" />
                            <TextBlock
                                Margin="46,20,0,0"
                                Opacity="0.7"
                                Text="{TemplateBinding hlp:Attributes.Description}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </Expander.Header>

                    <ContentPresenter />
                </Expander>
            </ControlTemplate>

            <ControlTemplate x:Key="SettingsExpanderPlaceholder" TargetType="ContentControl">
                <Grid
                    Padding="26,16"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="4"
                    Opacity="0.35">
                    <FontIcon
                        HorizontalAlignment="Left"
                        FontSize="25"
                        Glyph="{TemplateBinding hlp:Attributes.Glyph}" />

                    <TextBlock
                        Margin="46,0,0,0"
                        Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"
                        Text="{TemplateBinding hlp:Attributes.Title}"
                        TextTrimming="CharacterEllipsis" />
                    <TextBlock
                        Margin="46,20,0,0"
                        Opacity="0.7"
                        Text="{TemplateBinding hlp:Attributes.Description}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="SettingsCard" TargetType="ContentControl">
                <Grid
                    Padding="12"
                    HorizontalAlignment="Stretch"
                    Background="{ThemeResource ControlFillColorDefault}"
                    CornerRadius="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="12" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,2,0,0"
                        FontSize="16"
                        Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"
                        Text="{TemplateBinding hlp:Attributes.Title}"
                        TextTrimming="CharacterEllipsis" />
                    <TextBlock
                        Margin="0,18,0,0"
                        Opacity="0.7"
                        Text="{TemplateBinding hlp:Attributes.Description}"
                        TextTrimming="CharacterEllipsis" />

                    <ContentPresenter
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        ToolTipService.ToolTip="{TemplateBinding hlp:Attributes.Title}" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="WithHeader" TargetType="ContentControl">
                <Grid HorizontalAlignment="Stretch">
                    <TextBlock Margin="2,0,0,0" Text="{TemplateBinding hlp:Attributes.Title}" />

                    <ContentPresenter Margin="0,22,0,0" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="Image" TargetType="ContentControl">
                <Border Height="50" CornerRadius="4">
                    <Border.Background>
                        <LinearGradientBrush>
                            <GradientStop Offset="0" Color="#90606060" />
                            <GradientStop Offset="1" Color="#00606060" />
                        </LinearGradientBrush>
                    </Border.Background>

                    <Image Source="{TemplateBinding hlp:Attributes.ImageUrl}" Stretch="UniformToFill" />
                </Border>
            </ControlTemplate>


            <!--  Controls  -->
            <Style x:Key="DefaultContentDialogStyle" TargetType="ContentDialog">
                <Setter Property="Foreground" Value="{ThemeResource ContentDialogForeground}" />
                <Setter Property="Background" Value="{ThemeResource ContentDialogBackground}" />
                <Setter Property="BorderThickness" Value="{ThemeResource ContentDialogBorderWidth}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ContentDialogBorderBrush}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="PrimaryButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
                <Setter Property="SecondaryButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
                <Setter Property="CloseButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
                <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentDialog">
                            <Border x:Name="Container">
                                <Grid x:Name="LayoutRoot" Visibility="Collapsed">
                                    <Rectangle x:Name="SmokeLayerBackground" Fill="{ThemeResource ContentDialogSmokeFill}" />
                                    <Border
                                        x:Name="BackgroundElement"
                                        MinWidth="{ThemeResource ContentDialogMinWidth}"
                                        MinHeight="{ThemeResource ContentDialogMinHeight}"
                                        MaxHeight="{ThemeResource ContentDialogMaxHeight}"
                                        Margin="60"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="{TemplateBinding Background}"
                                        BackgroundSizing="InnerBorderEdge"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                        FlowDirection="{TemplateBinding FlowDirection}"
                                        RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" />
                                        </Border.RenderTransform>
                                        <Grid x:Name="DialogSpace" CornerRadius="{ThemeResource OverlayCornerRadius}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer
                                                x:Name="ContentScrollViewer"
                                                HorizontalScrollBarVisibility="Disabled"
                                                IsTabStop="False"
                                                VerticalScrollBarVisibility="Disabled"
                                                ZoomMode="Disabled">
                                                <Grid
                                                    Padding="{ThemeResource ContentDialogPadding}"
                                                    Background="{ThemeResource ContentDialogTopOverlay}"
                                                    BorderBrush="{ThemeResource ContentDialogSeparatorBorderBrush}"
                                                    BorderThickness="{ThemeResource ContentDialogSeparatorThickness}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <ContentControl
                                                        x:Name="Title"
                                                        Margin="{ThemeResource ContentDialogTitleMargin}"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top"
                                                        Content="{TemplateBinding Title}"
                                                        ContentTemplate="{TemplateBinding TitleTemplate}"
                                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                                        FontSize="20"
                                                        FontWeight="SemiBold"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        IsTabStop="False">
                                                        <ContentControl.Template>
                                                            <ControlTemplate TargetType="ContentControl">
                                                                <ContentPresenter
                                                                    Margin="{TemplateBinding Padding}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                    MaxLines="2"
                                                                    TextWrapping="Wrap" />
                                                            </ControlTemplate>
                                                        </ContentControl.Template>
                                                    </ContentControl>
                                                    <ContentPresenter
                                                        x:Name="Content"
                                                        Grid.Row="1"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        TextWrapping="Wrap" />
                                                </Grid>
                                            </ScrollViewer>
                                            <Grid
                                                x:Name="CommandSpace"
                                                Grid.Row="1"
                                                Padding="{ThemeResource ContentDialogPadding}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Bottom"
                                                Background="{TemplateBinding Background}"
                                                XYFocusKeyboardNavigation="Enabled">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="PrimaryColumn" Width="*" />
                                                    <ColumnDefinition x:Name="FirstSpacer" Width="0" />
                                                    <ColumnDefinition x:Name="SecondaryColumn" Width="0" />
                                                    <ColumnDefinition x:Name="SecondSpacer" Width="{ThemeResource ContentDialogButtonSpacing}" />
                                                    <ColumnDefinition x:Name="CloseColumn" Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Button
                                                    x:Name="PrimaryButton"
                                                    HorizontalAlignment="Stretch"
                                                    Content="{TemplateBinding PrimaryButtonText}"
                                                    ElementSoundMode="FocusOnly"
                                                    IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                                                    IsTabStop="False"
                                                    Style="{TemplateBinding PrimaryButtonStyle}" />
                                                <Button
                                                    x:Name="SecondaryButton"
                                                    HorizontalAlignment="Stretch"
                                                    Content="{TemplateBinding SecondaryButtonText}"
                                                    ElementSoundMode="FocusOnly"
                                                    IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                                                    IsTabStop="False"
                                                    Style="{TemplateBinding SecondaryButtonStyle}" />
                                                <Button
                                                    x:Name="CloseButton"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Stretch"
                                                    Content="{TemplateBinding CloseButtonText}"
                                                    ElementSoundMode="FocusOnly"
                                                    IsTabStop="False"
                                                    Style="{TemplateBinding CloseButtonStyle}" />
                                            </Grid>

                                        </Grid>
                                    </Border>

                                </Grid>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DialogShowingStates">

                                        <VisualStateGroup.Transitions>
                                            <VisualTransition To="DialogHidden">

                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                        <SplineDoubleKeyFrame
                                                            KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                            KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                            Value="1.05" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                        <SplineDoubleKeyFrame
                                                            KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                            KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                            Value="1.05" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition To="DialogShowing">

                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                        <SplineDoubleKeyFrame
                                                            KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                            KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                            Value="1.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                        <SplineDoubleKeyFrame
                                                            KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                            KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                            Value="1.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="DialogHidden" />
                                        <VisualState x:Name="DialogShowing">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.IsTabStop" Value="True" />
                                                <Setter Target="SecondaryButton.IsTabStop" Value="True" />
                                                <Setter Target="CloseButton.IsTabStop" Value="True" />
                                                <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                                                <Setter Target="BackgroundElement.TabFocusNavigation" Value="Cycle" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="DialogShowingWithoutSmokeLayer">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.IsTabStop" Value="True" />
                                                <Setter Target="SecondaryButton.IsTabStop" Value="True" />
                                                <Setter Target="CloseButton.IsTabStop" Value="True" />
                                                <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                                                <Setter Target="LayoutRoot.Background" Value="{x:Null}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DialogSizingStates">
                                        <VisualState x:Name="DefaultDialogSizing" />
                                        <VisualState x:Name="FullDialogSizing">
                                            <VisualState.Setters>
                                                <Setter Target="BackgroundElement.VerticalAlignment" Value="Stretch" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                        <VisualState x:Name="AllVisible">
                                            <VisualState.Setters>
                                                <Setter Target="FirstSpacer.Width" Value="{ThemeResource ContentDialogButtonSpacing}" />
                                                <Setter Target="SecondaryColumn.Width" Value="*" />
                                                <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="NoneVisible">
                                            <VisualState.Setters>
                                                <Setter Target="CommandSpace.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryVisible">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.(Grid.Column)" Value="4" />
                                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryVisible">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.(Grid.Column)" Value="4" />
                                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CloseVisible">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryAndSecondaryVisible">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.(Grid.Column)" Value="4" />
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryAndCloseVisible">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryAndCloseVisible">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DefaultButtonStates">
                                        <VisualState x:Name="NoDefaultButton" />
                                        <VisualState x:Name="PrimaryAsDefaultButton">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Style" Value="{StaticResource AccentButtonStyle}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryAsDefaultButton">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.Style" Value="{StaticResource AccentButtonStyle}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CloseAsDefaultButton">
                                            <VisualState.Setters>
                                                <Setter Target="CloseButton.Style" Value="{StaticResource AccentButtonStyle}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DialogBorderStates">
                                        <VisualState x:Name="NoBorder" />
                                        <VisualState x:Name="AccentColorBorder">
                                            <VisualState.Setters>
                                                <Setter Target="BackgroundElement.BorderBrush" Value="{ThemeResource SystemControlForegroundAccentBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="CalendarDatePicker">
                <Setter Property="Foreground" Value="{ThemeResource CalendarDatePickerForeground}" />
                <Setter Property="Background" Value="{ThemeResource CalendarDatePickerBackground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource CalendarDatePickerBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="CalendarViewStyle" Value="{ThemeResource DefaultCalendarViewStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarDatePicker">
                            <Grid x:Name="Root">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <FlyoutBase.AttachedFlyout>
                                    <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                                        <Flyout.FlyoutPresenterStyle>
                                            <Style TargetType="FlyoutPresenter">
                                                <Setter Property="Padding" Value="0" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="IsDefaultShadowEnabled" Value="True" />
                                                <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="FlyoutPresenter">
                                                            <ContentPresenter
                                                                Margin="{TemplateBinding Padding}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Content="{TemplateBinding Content}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                CornerRadius="{TemplateBinding CornerRadius}" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Flyout.FlyoutPresenterStyle>
                                        <CalendarView
                                            x:Name="CalendarView"
                                            CalendarIdentifier="{TemplateBinding CalendarIdentifier}"
                                            CornerRadius="{ThemeResource OverlayCornerRadius}"
                                            DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}"
                                            DisplayMode="{TemplateBinding DisplayMode}"
                                            FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                                            IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}"
                                            IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}"
                                            IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                                            MaxDate="{TemplateBinding MaxDate}"
                                            MinDate="{TemplateBinding MinDate}"
                                            Style="{TemplateBinding CalendarViewStyle}" />
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                                <ContentPresenter
                                    x:Name="HeaderContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Margin="{StaticResource CalendarDatePickerTopHeaderMargin}"
                                    VerticalAlignment="Top"
                                    x:DeferLoadStrategy="Lazy"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    TextWrapping="Wrap"
                                    Visibility="Collapsed" />
                                <Border
                                    x:Name="Background"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    MinWidth="155"
                                    MinHeight="32"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Control.IsTemplateFocusTarget="True"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                <Border
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    MinHeight="32"
                                    BorderBrush="{ThemeResource TextControlElevationBorderBrush}"
                                    BorderThickness="0,0,0,1"
                                    Control.IsTemplateFocusTarget="True"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                <TextBlock
                                    x:Name="DateText"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Padding="12,0,0,2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{ThemeResource CalendarDatePickerTextForeground}"
                                    Text="{TemplateBinding PlaceholderText}" />
                                <FontIcon
                                    x:Name="CalendarGlyph"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="12"
                                    Foreground="{ThemeResource CalendarDatePickerCalendarGlyphForeground}"
                                    Glyph="&#xE787;" />
                                <ContentPresenter
                                    x:Name="DescriptionPresenter"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    x:Load="False"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Content="{TemplateBinding Description}"
                                    Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerHeaderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                        <VisualState x:Name="Focused" />

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />

                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="HeaderStates">
                                        <VisualState x:Name="TopHeader" />
                                        <VisualState x:Name="LeftHeader">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1" />
                                                <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0" />
                                                <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1" />
                                                <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}" />
                                                <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ctr:Notification">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ctr:Notification">
                                <Grid
                                    Name="RootLayout"
                                    Width="544"
                                    Padding="12"
                                    BorderBrush="{ThemeResource SystemFillColorSolidAttentionBackground}"
                                    BorderThickness="2"
                                    CornerRadius="4"
                                    Translation="0,0,64">
                                    <Grid.OpacityTransition>
                                        <ScalarTransition Duration="0:0:0.2" />
                                    </Grid.OpacityTransition>
                                    <Grid.Background>
                                        <AcrylicBrush
                                            x:Name="RootBackground"
                                            FallbackColor="{ThemeResource SystemFillColorSolidAttentionBackground}"
                                            TintColor="{ThemeResource SystemFillColorSolidAttentionBackground}"
                                            TintLuminosityOpacity="0.7"
                                            TintOpacity="0.5" />
                                    </Grid.Background>
                                    <Grid.Shadow>
                                        <ThemeShadow />
                                    </Grid.Shadow>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Ellipse
                                        x:Name="IconBackground"
                                        Width="17"
                                        Height="17"
                                        Margin="1,8,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="{ThemeResource SystemFillColorAttentionBrush}" />
                                    <FontIcon
                                        x:Name="Icon"
                                        Foreground="{ThemeResource TextFillColorInverseBrush}"
                                        Glyph="{StaticResource InfoBarInformationalIconGlyph}" />

                                    <TextBlock
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Style="{ThemeResource BodyStrongTextBlockStyle}"
                                        Text="{TemplateBinding Title}" />
                                    <TextBlock
                                        Grid.Column="4"
                                        VerticalAlignment="Center"
                                        Text="{TemplateBinding Message}"
                                        TextTrimming="CharacterEllipsis" />

                                    <Button
                                        Grid.Column="6"
                                        Width="32"
                                        Height="32"
                                        Padding="0"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        ToolTipService.ToolTip="More info"
                                        Visibility="{TemplateBinding MoreButtonVisibility}">
                                        <FontIcon FontSize="12" Glyph="&#xe712;" />
                                    </Button>
                                    <Button
                                        Grid.Column="8"
                                        Width="32"
                                        Height="32"
                                        Padding="0"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        ToolTipService.ToolTip="Close notification">
                                        <FontIcon FontSize="12" Glyph="&#xe8bb;" />
                                    </Button>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="NotificationLevels">
                                            <VisualState x:Name="Information" />
                                            <VisualState x:Name="Warning">
                                                <VisualState.Setters>
                                                    <Setter Target="RootLayout.BorderBrush" Value="{ThemeResource SystemFillColorCautionBackgroundBrush}" />
                                                    <Setter Target="RootBackground.FallbackColor" Value="{ThemeResource SystemFillColorCautionBackground}" />
                                                    <Setter Target="RootBackground.TintColor" Value="{ThemeResource SystemFillColorCautionBackground}" />
                                                    <Setter Target="IconBackground.Fill" Value="{ThemeResource SystemFillColorCautionBrush}" />
                                                    <Setter Target="Icon.Glyph" Value="&#xF13C;" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Error">
                                                <VisualState.Setters>
                                                    <Setter Target="RootLayout.BorderBrush" Value="{ThemeResource SystemFillColorCriticalBackgroundBrush}" />
                                                    <Setter Target="RootBackground.FallbackColor" Value="{ThemeResource SystemFillColorCriticalBackground}" />
                                                    <Setter Target="RootBackground.TintColor" Value="{ThemeResource SystemFillColorCriticalBackground}" />
                                                    <Setter Target="IconBackground.Fill" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                                                    <Setter Target="Icon.Glyph" Value="&#xF13D;" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Success">
                                                <VisualState.Setters>
                                                    <Setter Target="RootLayout.BorderBrush" Value="{ThemeResource SystemFillColorSuccessBackgroundBrush}" />
                                                    <Setter Target="RootBackground.FallbackColor" Value="{ThemeResource SystemFillColorSuccessBackground}" />
                                                    <Setter Target="RootBackground.TintColor" Value="{ThemeResource SystemFillColorSuccessBackground}" />
                                                    <Setter Target="IconBackground.Fill" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                                                    <Setter Target="Icon.Glyph" Value="&#xF13E;" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
