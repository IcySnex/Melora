import{_ as r,c as i,a as n,e as t,d as l,f as a,b as o,r as c,o as p}from"./app-DS8RxCfC.js";const d={};function h(m,e){const s=c("RouteLink");return p(),i("div",null,[e[9]||(e[9]=n("h1",{id:"pluginloadcontext",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pluginloadcontext"},[n("span",null,"PluginLoadContext")])],-1)),e[10]||(e[10]=n("p",null,"Represents the runtime's concept of a scope for plugin loading.",-1)),n("ul",null,[e[3]||(e[3]=n("li",null,[n("strong",null,"Type:"),t(" Class")],-1)),n("li",null,[e[1]||(e[1]=n("strong",null,"Namespace:",-1)),e[2]||(e[2]=t()),l(s,{to:"/plugin-api-reference/Melora.Plugins/"},{default:a(()=>e[0]||(e[0]=[t("Melora.Plugins")])),_:1})]),e[4]||(e[4]=n("li",null,[n("strong",null,"Implements:"),t(),n("a",{href:"https://learn.microsoft.com/dotnet/api/system.runtime.loader.assemblyloadcontext",target:"_blank",rel:"noopener noreferrer"},"AssemblyLoadContext")],-1))]),e[11]||(e[11]=o(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> PluginLoadContext</span><span style="color:#89DDFF;"> :</span><span style="color:#C0CAF5;"> AssemblyLoadContext</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="frompluginarchiveasync" tabindex="-1"><a class="header-anchor" href="#frompluginarchiveasync"><span>FromPluginArchiveAsync</span></a></h3><p>Creates a new instance of PluginLoadContext from a plugin archive.</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> static</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">PluginLoadContext</span><span style="color:#89DDFF;">&gt;</span><span style="color:#7AA2F7;"> FromPluginArchiveAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BB9AF7;">  string</span><span style="color:#C0CAF5;"> path</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> </span></span>
<span class="line"><span style="color:#C0CAF5;">  CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Parameter</th><th>Summary</th></tr></thead><tbody><tr><td><code>string</code> path</td><td>The path to the plugin archive.</td></tr><tr><td><em>(optional)</em> <code>CancellationToken</code> cancellationToken</td><td>The token to cancel this action.</td></tr></tbody></table><h3 id="loadfromarchiveasync" tabindex="-1"><a class="header-anchor" href="#loadfromarchiveasync"><span>LoadFromArchiveAsync</span></a></h3><p>Loads the assembly with an archive.</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">Assembly</span><span style="color:#89DDFF;">&gt;</span><span style="color:#7AA2F7;"> LoadFromArchiveAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">  ZipArchive</span><span style="color:#C0CAF5;"> archive</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> </span></span>
<span class="line"><span style="color:#BB9AF7;">  string</span><span style="color:#C0CAF5;"> path</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> </span></span>
<span class="line"><span style="color:#C0CAF5;">  CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Parameter</th><th>Summary</th></tr></thead><tbody><tr><td><code>ZipArchive</code> archive</td><td>The archive to load the assembly from.</td></tr><tr><td><code>string</code> path</td><td>The path to the assembly file inside the archive.</td></tr><tr><td><em>(optional)</em> <code>CancellationToken</code> cancellationToken</td><td>The token to cancel this action.</td></tr></tbody></table><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="manifest" tabindex="-1"><a class="header-anchor" href="#manifest"><span>Manifest</span></a></h3><p>The plugin manifest corresponding to this load context.</p>`,13)),n("ul",null,[n("li",null,[e[6]||(e[6]=n("strong",null,"Type:",-1)),e[7]||(e[7]=t()),l(s,{to:"/plugin-api-reference/Melora.Plugins/Models/Manifest.html"},{default:a(()=>e[5]||(e[5]=[t("Melora.Plugins.Models.Manifest")])),_:1})]),e[8]||(e[8]=n("li",null,[n("strong",null,"Is Read Only:"),t(),n("code",null,"True")],-1))]),e[12]||(e[12]=o('<h3 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>Location</span></a></h3><p>The full path of the file from which the plugin was loaded from.</p><ul><li><strong>Type:</strong> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">System.String</a></li><li><strong>Is Read Only:</strong> <code>True</code></li></ul><h3 id="entrypointassembly" tabindex="-1"><a class="header-anchor" href="#entrypointassembly"><span>EntryPointAssembly</span></a></h3><p>The assembly of the plugin entry point.</p><ul><li><strong>Type:</strong> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.assembly" target="_blank" rel="noopener noreferrer">System.Reflection.Assembly</a></li><li><strong>Is Read Only:</strong> <code>False</code></li></ul><h3 id="assemblies" tabindex="-1"><a class="header-anchor" href="#assemblies"><span>Assemblies</span></a></h3><ul><li><strong>Type:</strong> <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable%3Cassembly%3E" target="_blank" rel="noopener noreferrer">System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;</a></li><li><strong>Is Read Only:</strong> <code>True</code></li></ul><h3 id="iscollectible" tabindex="-1"><a class="header-anchor" href="#iscollectible"><span>IsCollectible</span></a></h3><ul><li><strong>Type:</strong> <a href="https://learn.microsoft.com/dotnet/api/system.bool" target="_blank" rel="noopener noreferrer">System.Boolean</a></li><li><strong>Is Read Only:</strong> <code>True</code></li></ul><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>Name</span></a></h3><ul><li><strong>Type:</strong> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">System.String</a></li><li><strong>Is Read Only:</strong> <code>True</code></li></ul>',12))])}const y=r(d,[["render",h],["__file","PluginLoadContext.html.vue"]]),g=JSON.parse(`{"path":"/plugin-api-reference/Melora.Plugins/PluginLoadContext.html","title":"PluginLoadContext","lang":"en-US","frontmatter":{"description":"PluginLoadContext Represents the runtime's concept of a scope for plugin loading. Type: Class Namespace: Implements: AssemblyLoadContext Methods FromPluginArchiveAsync Creates a...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://localhost/Melora/plugin-api-reference/Melora.Plugins/PluginLoadContext.html"}],["meta",{"property":"og:site_name","content":"Melora"}],["meta",{"property":"og:title","content":"PluginLoadContext"}],["meta",{"property":"og:description","content":"PluginLoadContext Represents the runtime's concept of a scope for plugin loading. Type: Class Namespace: Implements: AssemblyLoadContext Methods FromPluginArchiveAsync Creates a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PluginLoadContext\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"IcySnex\\",\\"url\\":\\"https://github.com/IcySnex\\"}]}"]]},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"FromPluginArchiveAsync","slug":"frompluginarchiveasync","link":"#frompluginarchiveasync","children":[]},{"level":3,"title":"LoadFromArchiveAsync","slug":"loadfromarchiveasync","link":"#loadfromarchiveasync","children":[]}]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"Manifest","slug":"manifest","link":"#manifest","children":[]},{"level":3,"title":"Location","slug":"location","link":"#location","children":[]},{"level":3,"title":"EntryPointAssembly","slug":"entrypointassembly","link":"#entrypointassembly","children":[]},{"level":3,"title":"Assemblies","slug":"assemblies","link":"#assemblies","children":[]},{"level":3,"title":"IsCollectible","slug":"iscollectible","link":"#iscollectible","children":[]},{"level":3,"title":"Name","slug":"name","link":"#name","children":[]}]}],"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"plugin-api-reference/Melora.Plugins/PluginLoadContext.md","autoDesc":true}`);export{y as comp,g as data};
