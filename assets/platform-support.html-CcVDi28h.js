import{_ as p,c as r,a as n,e as l,d as e,f as o,b as t,r as i,o as c}from"./app-DS8RxCfC.js";const F="/Melora/plugin-development/platformsupport1.webp",y="/Melora/plugin-development/platformsupport2.webp",u="/Melora/plugin-development/platformsupport3.webp",d={};function D(g,s){const a=i("RouteLink");return c(),r("div",null,[s[125]||(s[125]=n("p",null,"This guide will walk you through the process of creating your own Melora Platform-Support plugins by using the integration of SoundCloud with Melora as an example. It is easily adaptable to any other platform as well though.",-1)),n("p",null,[s[1]||(s[1]=l("If you're new to Platform-Support plugins, please refer to the ")),e(a,{to:"/guide/platform-support.html"},{default:o(()=>s[0]||(s[0]=[l("Beginner's Guide")])),_:1}),s[2]||(s[2]=l(" for an introduction."))]),s[126]||(s[126]=n("h2",{id:"setup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setup"},[n("span",null,"Setup")])],-1)),n("p",null,[s[4]||(s[4]=l("Before diving into coding your new shiny Melora plugin, it's important to first follow the plugin development ")),e(a,{to:"/plugin-development/getting-started.html"},{default:o(()=>s[3]||(s[3]=[l("Getting Started Guide")])),_:1}),s[5]||(s[5]=l(". This guide will walk you through setting up your IDE, project, and plugin bundle manifest, ensuring you're fully prepared to start developing your plugin."))]),s[127]||(s[127]=t(`<h2 id="structure" tabindex="-1"><a class="header-anchor" href="#structure"><span>Structure</span></a></h2><p>Before you begin, it&#39;s <strong>helpful</strong> to organize your plugin bundle with the following structure:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span>└─ Melora.PlatformSupport.&lt;NAME&gt;</span></span>
<span class="line"><span>   ├─ Internal</span></span>
<span class="line"><span>   │  └─ ...</span></span>
<span class="line"><span>   ├─ Manifest.json</span></span>
<span class="line"><span>   └─ &lt;NAME&gt;Plugin.cs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Root:</strong> It&#39;s recommended to place all plugins <em>(classes that implement IPlugin)</em> in the <strong>root</strong> of your plugin bundle. The manifest should also be here.</li><li><strong>Internal:</strong> Organize additional components <em>- such as models, helper classes -</em> within an <strong>Internal</strong> namespace. This structure keeps your plugin <strong>organized</strong> and ensures that your main functionalities are <strong>easily accessible</strong> while keeping auxiliary components <strong>neatly separated</strong>.</li></ul><h2 id="implementing-your-plugin" tabindex="-1"><a class="header-anchor" href="#implementing-your-plugin"><span>Implementing Your Plugin</span></a></h2><h3 id="step-1-the-manifest" tabindex="-1"><a class="header-anchor" href="#step-1-the-manifest"><span>Step 1: The Manifest</span></a></h3>`,6)),n("p",null,[s[7]||(s[7]=l("To ensure Melora understands what your plugin bundle does, you first need to provide some essential information via a ")),s[8]||(s[8]=n("strong",null,"manifest file",-1)),s[9]||(s[9]=l(". This file tells Melora about your plugin’s purpose, author, and more. For instructions on adding the manifest to your project, refer to the ")),e(a,{to:"/plugin-development/getting-started.html#create-a-plugin-manifest"},{default:o(()=>s[6]||(s[6]=[l("Getting Started Guide")])),_:1}),s[10]||(s[10]=l("."))]),s[128]||(s[128]=t(`<h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example:</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9ABDF5;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">Name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">SoundCloud</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">Description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">Adds support to search &amp; download tracks, sets &amp; users from SoundCloud.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">Author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">IcySnex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">ApiVersion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">LastUpdatedAt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">2024-08-28T14:26:00Z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">SourceUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">https://github.com/IcySnex/Melora/tree/main/Plugins/Melora.PlatformSupport.SoundCloud</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">DownloadUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">https://github.com/IcySnex/Melora/releases/download/v1.0.0-stable/Melora.PlatformSupport.SoundCloud.mlr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">PluginKinds</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span></span>
<span class="line"><span style="color:#FF9E64;">    0</span></span>
<span class="line"><span style="color:#9ABDF5;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">EntryPoint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">Melora.PlatformSupport.SoundCloud.dll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#7AA2F7;">Dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#9ECE6A;">SoundCloudExplode.dll</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#9ABDF5;">  ]</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-2-the-plugin-class" tabindex="-1"><a class="header-anchor" href="#step-2-the-plugin-class"><span>Step 2: The Plugin Class</span></a></h3>`,3)),n("ul",null,[s[16]||(s[16]=n("li",null,[l("Create a new class called "),n("code",null,"<NAME>Plugin.cs"),l(" in the root of your project.")],-1)),n("li",null,[s[13]||(s[13]=l("This class should inherit from ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html"},{default:o(()=>s[11]||(s[11]=[n("code",null,"PlatformSupportPlugin",-1)])),_:1}),s[14]||(s[14]=l(", which itself implements the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/IPlugin.html"},{default:o(()=>s[12]||(s[12]=[n("code",null,"IPlugin",-1)])),_:1}),s[15]||(s[15]=l(" interface."))])]),s[129]||(s[129]=t(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> SoundCloudPlugin</span><span style="color:#89DDFF;"> :</span><span style="color:#C0CAF5;"> PlatformSupportPlugin</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    public</span><span style="color:#9D7CD8;font-style:italic;"> override</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#7AA2F7;"> SearchAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BB9AF7;">        string</span><span style="color:#C0CAF5;"> query</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        IProgress</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> default)</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">        throw</span><span style="color:#89DDFF;"> new</span><span style="color:#C0CAF5;"> NotImplementedException</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    public</span><span style="color:#9D7CD8;font-style:italic;"> override</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">DownloadableTrack</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#7AA2F7;"> PrepareDownloadsAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">        IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> searchResults</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        IProgress</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> default)</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">        throw</span><span style="color:#89DDFF;"> new</span><span style="color:#C0CAF5;"> NotImplementedException</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    public</span><span style="color:#9D7CD8;font-style:italic;"> override</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">Stream</span><span style="color:#89DDFF;">&gt;</span><span style="color:#7AA2F7;"> GetStreamAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">        DownloadableTrack</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> default)</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">        throw</span><span style="color:#89DDFF;"> new</span><span style="color:#C0CAF5;"> NotImplementedException</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods:</span></a></h4><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td><code>SearchAsync</code></td><td>Handles searching based on the query input by the user.</td></tr><tr><td><code>PrepareDownloadsAsync</code></td><td>This method will convert the selected <code>SearchResult</code>&#39;s to proper <code>DownloadableTrack</code>&#39;s.</td></tr><tr><td><code>GetStreamAsync</code></td><td>Responsible for downloading the track and returning an audio stream. The stream&#39;s format doesn&#39;t matter, as it will be re-encoded later on.</td></tr></tbody></table><h3 id="step-3-the-constructors" tabindex="-1"><a class="header-anchor" href="#step-3-the-constructors"><span>Step 3: The Constructors</span></a></h3>`,4)),n("p",null,[s[18]||(s[18]=l("The ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html"},{default:o(()=>s[17]||(s[17]=[n("code",null,"PlatformSupportPlugin",-1)])),_:1}),s[19]||(s[19]=l(" class ")),s[20]||(s[20]=n("strong",null,"requires",-1)),s[21]||(s[21]=l(" a few key pieces of information from your plugin, which are passed through its constructor. Here’s a breakdown of the parameters:"))]),n("table",null,[s[29]||(s[29]=n("thead",null,[n("tr",null,[n("th",null,"Parameter"),n("th",null,"Description")])],-1)),n("tbody",null,[s[26]||(s[26]=n("tr",null,[n("td",null,[n("code",null,"string"),l(" name")]),n("td",null,"The name of the plugin. This will be used to display your plugin in the Melora client UI.")],-1)),s[27]||(s[27]=n("tr",null,[n("td",null,[n("code",null,"string"),l(" iconPathData")]),n("td",null,"The svg path data for the plugin icon. This will be used to display your plugin in the Melora client UI.")],-1)),n("tr",null,[s[25]||(s[25]=n("td",null,[n("code",null,"PlatformSupportPluginConfig"),l(" config")],-1)),n("td",null,[s[23]||(s[23]=l("The config the plugin gets initialized with. Learn more about plugin configs ")),e(a,{to:"/plugin-development/configs.html"},{default:o(()=>s[22]||(s[22]=[l("here")])),_:1}),s[24]||(s[24]=l("."))])]),s[28]||(s[28]=n("tr",null,[n("td",null,[n("code",null,"ILogger<IPlugin>?"),l(" logger")]),n("td",null,"An optional logger.")],-1))])]),n("ul",null,[n("li",null,[s[31]||(s[31]=l("Your plugin's constructor will need to pass these parameters when calling the ")),s[32]||(s[32]=n("strong",null,"base class constructor",-1)),s[33]||(s[33]=l(" to properly initialize the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html"},{default:o(()=>s[30]||(s[30]=[n("code",null,"PlatformSupportPlugin",-1)])),_:1}),s[34]||(s[34]=l("."))])]),s[130]||(s[130]=t(`<h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example:</span></a></h4><p>The Melora client will attempt to use various constructors based on your implementation and if a config is already saved for your plugin. Thats why you need to implement multiple constructors.</p><ul><li>Here are the required constructors if you plan on using logging in your plugin:</li></ul><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#7AA2F7;"> SoundCloudPlugin</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">PlatformSupportPluginConfig</span><span style="color:#89DDFF;">?</span><span style="color:#C0CAF5;"> config</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> ILogger</span><span style="color:#BB9AF7;">&lt;</span><span style="color:#C0CAF5;">IPlugin</span><span style="color:#BB9AF7;">&gt;</span><span style="color:#C0CAF5;"> logger</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> :</span><span style="color:#F7768E;"> base</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">SoundCloud</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    iconPathData</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">M219.8 390.3V133.6c0-8.2 2.5-13.1 7.4-14.6 82.2-19.4 165.3 37.9 172.9 124.4 80.4-33.9 150.3 68.4 88 129.8-15.8 15.6-34.7 23.4-56.8 23.4l-207.2-.2c-2.8-1.1-4.3-3.9-4.3-6.1h0zm-55.7-7.5c0 18.5 35.3 18.8 35.3 0v-247c0-23.4-35.3-23.3-35.3 0v247h0zm-54.8 0c0 18.1 35.2 18.8 35.2 0V237.2c0-23.4-35.2-23.3-35.2 0v145.6h0zm-54.5-7.6c0 18.7 35 19 35 0V215.7c0-22.6-35-22.9-35 0v159.5zM0 346c0 21.8 35 27.3 35 0v-68.4c0-23.2-35-23-35 0V346z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    config</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new(</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultOptions</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">        [</span></span>
<span class="line"><span style="color:#89DDFF;">            new</span><span style="color:#C0CAF5;"> BoolOption</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Save Description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">Whether to save the description as the lyrics</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">            new</span><span style="color:#C0CAF5;"> StringOption</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Client ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">The SoundCloud API client ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 50</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        ],</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultQuality</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Quality</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">_160kbps</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultFormat</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Format</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">mp3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsLimit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> null</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsSorting</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Sorting</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Default</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsSortDescending</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        initialConfig</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> config</span><span style="color:#89DDFF;">)</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    logger</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> logger</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#7AA2F7;"> SoundCloudPlugin</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">ILogger</span><span style="color:#BB9AF7;">&lt;</span><span style="color:#C0CAF5;">IPlugin</span><span style="color:#BB9AF7;">&gt;</span><span style="color:#C0CAF5;"> logger</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> :</span><span style="color:#F7768E;"> this</span><span style="color:#89DDFF;">(</span><span style="color:#FF9E64;">null</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> logger</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>If you don’t need logging in your plugin, use these constructors:</li></ul><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#7AA2F7;"> SoundCloudPlugin</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">PlatformSupportPluginConfig</span><span style="color:#89DDFF;">?</span><span style="color:#C0CAF5;"> config</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> :</span><span style="color:#F7768E;"> base</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">SoundCloud</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    iconPathData</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">M219.8 390.3V133.6c0-8.2 2.5-13.1 7.4-14.6 82.2-19.4 165.3 37.9 172.9 124.4 80.4-33.9 150.3 68.4 88 129.8-15.8 15.6-34.7 23.4-56.8 23.4l-207.2-.2c-2.8-1.1-4.3-3.9-4.3-6.1h0zm-55.7-7.5c0 18.5 35.3 18.8 35.3 0v-247c0-23.4-35.3-23.3-35.3 0v247h0zm-54.8 0c0 18.1 35.2 18.8 35.2 0V237.2c0-23.4-35.2-23.3-35.2 0v145.6h0zm-54.5-7.6c0 18.7 35 19 35 0V215.7c0-22.6-35-22.9-35 0v159.5zM0 346c0 21.8 35 27.3 35 0v-68.4c0-23.2-35-23-35 0V346z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    config</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new(</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultOptions</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">        [</span></span>
<span class="line"><span style="color:#89DDFF;">            new</span><span style="color:#C0CAF5;"> BoolOption</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Save Description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">Whether to save the description as the lyrics</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">            new</span><span style="color:#C0CAF5;"> StringOption</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Client ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">The SoundCloud API client ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 50</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        ],</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultQuality</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Quality</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">_160kbps</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultFormat</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Format</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">mp3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsLimit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> null</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsSorting</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Sorting</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Default</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        defaultSearchResultsSortDescending</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">        initialConfig</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> config</span><span style="color:#89DDFF;">)</span><span style="color:#A9B1D6;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    logger</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> null</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#7AA2F7;"> SoundCloudPlugin</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> :</span><span style="color:#F7768E;"> this</span><span style="color:#89DDFF;">(</span><span style="color:#FF9E64;">null</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Note</p><p>It is <strong>always recommended</strong> to use logging in your plugin. This makes debugging <strong>easier</strong> if a user ever encounters any issues.</p><p>Especially since it&#39;s very easy to implement logging with Melora&#39;s plugin infrastructure.</p></div><h3 id="step-4-validate" tabindex="-1"><a class="header-anchor" href="#step-4-validate"><span>Step 4: Validate</span></a></h3><p>Before proceeding, ensure that everything is set up correctly. If you have followed the <a href="%22/Melora/plugin-development/getting-started.html%22">Getting Started Guide</a> and cloned/forked the Melora Solution, you should be able to validate your plugin as follows:</p><ul><li><strong>Start Melora:</strong> In Visual Studio, press the <strong>&quot;⯈ Melora (Unpackaged)&quot;</strong> button. This will <strong>launch</strong> Melora with your plugin automatically loaded.</li><li>You should see a notification in the <strong>bottom right corner</strong> of Melora indicating that your plugin has been loaded.</li><li>On the right side of the Melora client, in the NavigationView, your plugin, including its icon, should be visible.</li></ul><figure><img src="`+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step-5-searching" tabindex="-1"><a class="header-anchor" href="#step-5-searching"><span>Step 5: Searching</span></a></h3><p>Once your plugin is set up and you have validated it loads in Melora, you can finally start coding the search functionality for your platform-support plugin.</p>',13)),n("p",null,[s[37]||(s[37]=l("The ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html"},{default:o(()=>s[35]||(s[35]=[n("code",null,"PlatformSupportPlugin",-1)])),_:1}),s[38]||(s[38]=l(" class requires you to override the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html#searchasync"},{default:o(()=>s[36]||(s[36]=[n("code",null,"SearchAsync()",-1)])),_:1}),s[39]||(s[39]=l(" method. This method provides:"))]),s[131]||(s[131]=t('<table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string</code> query</td><td>The search query entered by the user.</td></tr><tr><td><code>IProgress&lt;string&gt;</code> progress</td><td>An object to report progress which will be shown in the Melora client UI.</td></tr><tr><td><code>CancellationToken</code> cancellationToken</td><td>A token to handle cancellation requests.</td></tr></tbody></table><h4 id="high-level-overview" tabindex="-1"><a class="header-anchor" href="#high-level-overview"><span>High-Level Overview:</span></a></h4><ul><li><strong>Implement the SearchAsync() Method:</strong> Write the logic to perform searches specific to your platform, such as SoundCloud. You’ll need to integrate with the platform&#39;s API to fetch search results.</li><li><strong>Progress Reporting:</strong> Use the progress parameter to update the UI with search progress, enhancing user experience.</li><li><strong>Cancellation Handling:</strong> Ensure that your search operation can be cancelled using the cancellationToken if the user decides to stop the search.</li></ul><div class="hint-container info"><p class="hint-container-title">Note</p><p>For better organization and clarity, it’s recommended to create a &quot;Wrapper&quot; class in the <strong>Internal namespace</strong>. This class can handle all platform-specific interactions, keeping your <code>SearchAsync()</code> method focused on integrating with your wrapper.</p></div><h4 id="what-to-return" tabindex="-1"><a class="header-anchor" href="#what-to-return"><span>What to Return:</span></a></h4>',5)),n("p",null,[s[41]||(s[41]=l("Each platform may return different result types, like ")),s[42]||(s[42]=n("code",null,"Track",-1)),s[43]||(s[43]=l(" models from Spotify or ")),s[44]||(s[44]=n("code",null,"Video",-1)),s[45]||(s[45]=l(" models from YouTube. In Melora, you need to convert these models to the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[40]||(s[40]=[n("code",null,"SearchResult",-1)])),_:1}),s[46]||(s[46]=l(" model to handle everything uniformly. This also benefits memory usage and performance, as it avoids unnecessary processing of tracks that the user may not end up downloading."))]),n("p",null,[s[49]||(s[49]=l("You can use the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html#bufferasync"},{default:o(()=>s[47]||(s[47]=[l("static helper method")])),_:1}),s[50]||(s[50]=l(" in the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[48]||(s[48]=[n("code",null,"SearchResult",-1)])),_:1}),s[51]||(s[51]=l(" class to convert and buffer ")),s[52]||(s[52]=n("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1",target:"_blank",rel:"noopener noreferrer"},[n("code",null,"IAsyncEnumerable")],-1)),s[53]||(s[53]=l(" to ")),s[54]||(s[54]=n("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1",target:"_blank",rel:"noopener noreferrer"},[n("code",null,"IEnumerable<SearchResult>")],-1)),s[55]||(s[55]=l(":"))]),s[132]||(s[132]=t(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> static</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#7AA2F7;"> BufferAsync</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#89DDFF;">&gt;(</span></span>
<span class="line"><span style="color:#C0CAF5;">    IAsyncEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> source</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BB9AF7;">    int</span><span style="color:#C0CAF5;"> limit</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    Func</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> int</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> SearchResult</span><span style="color:#89DDFF;">?&gt;</span><span style="color:#C0CAF5;"> createSearchResult</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If your platform API doesn’t use <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1" target="_blank" rel="noopener noreferrer"><code>IAsyncEnumerable</code></a>, you can use the LINQ <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.select" target="_blank" rel="noopener noreferrer"><code>Select</code> method</a> to achieve similar results:</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> static</span><span style="color:#C0CAF5;"> IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">TResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#7AA2F7;"> Select</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">TSource</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> TResult</span><span style="color:#89DDFF;">&gt;(</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    this</span><span style="color:#C0CAF5;"> IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">TSource</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> source</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    Func</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">TSource</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> int</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> TResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> selector</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example:</span></a></h4><p>You can see the entire source code <em>- including the wrapper -</em> on <a href="https://github.com/IcySnex/Melora/tree/main/Plugins/Melora.PlatformSupport.SoundCloud/" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#7AA2F7;"> SearchAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BB9AF7;">    string</span><span style="color:#C0CAF5;"> query</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    IProgress</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C0CAF5;">    logger</span><span style="color:#89DDFF;">?.</span><span style="color:#7AA2F7;">LogInformation</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">[SoundCloudPlugin-SearchAsync] Getting SoundCloud search type...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C0CAF5;">    progress</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Report</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Preparing search...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">    SoundCloudSearchType</span><span style="color:#C0CAF5;"> type</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> SoundCloudWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetSearchType</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">query</span><span style="color:#89DDFF;">,</span><span style="color:#9D7CD8;font-style:italic;"> out</span><span style="color:#BB9AF7;"> string</span><span style="color:#89DDFF;">?</span><span style="color:#C0CAF5;"> path</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;">    switch</span><span style="color:#89DDFF;"> (</span><span style="color:#C0CAF5;">type</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    {</span></span>
<span class="line"><span style="color:#BB9AF7;">        case</span><span style="color:#C0CAF5;"> SoundCloudSearchType</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Track</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C0CAF5;">            SearchResult</span><span style="color:#C0CAF5;"> trackResult</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> await</span><span style="color:#C0CAF5;"> wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">SearchTrackAsync</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">path</span><span style="color:#BB9AF7;">!</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">            return</span><span style="color:#89DDFF;"> [</span><span style="color:#C0CAF5;">trackResult</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#BB9AF7;">        case</span><span style="color:#C0CAF5;"> SoundCloudSearchType</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Set</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C0CAF5;">            IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> albumResults</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> await</span><span style="color:#C0CAF5;"> wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">SearchSetAsync</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">path</span><span style="color:#BB9AF7;">!</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">            return</span><span style="color:#C0CAF5;"> albumResults</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">        case</span><span style="color:#C0CAF5;"> SoundCloudSearchType</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">User</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C0CAF5;">            IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> artistResults</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> await</span><span style="color:#C0CAF5;"> wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">SearchUserAsync</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">path</span><span style="color:#BB9AF7;">!</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">            return</span><span style="color:#C0CAF5;"> artistResults</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">        case</span><span style="color:#C0CAF5;"> SoundCloudSearchType</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Query</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C0CAF5;">            IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> querytResults</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> await</span><span style="color:#C0CAF5;"> wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">SearchQueryAsync</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">query</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">            return</span><span style="color:#C0CAF5;"> querytResults</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#89DDFF;"> [];</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validate" tabindex="-1"><a class="header-anchor" href="#validate"><span>Validate:</span></a></h4><p>If you did everything correct, you should now be able to use the Melora UI to search seamlessly on your platform.</p><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step-6-preparing-for-download" tabindex="-1"><a class="header-anchor" href="#step-6-preparing-for-download"><span>Step 6: Preparing For Download</span></a></h3>',11)),n("p",null,[s[59]||(s[59]=l("In the previous step, you returned a ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[56]||(s[56]=[n("code",null,"SearchResult",-1)])),_:1}),s[60]||(s[60]=l(" model, which ")),s[61]||(s[61]=n("strong",null,"only",-1)),s[62]||(s[62]=l(" contains the ")),s[63]||(s[63]=n("strong",null,"basic information",-1)),s[64]||(s[64]=l(" needed to display tracks in the Melora client UI. However, when the user decides to download a track, you’ll need to convert this ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[57]||(s[57]=[n("code",null,"SearchResult",-1)])),_:1}),s[65]||(s[65]=l(" into a ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/DownloadableTrack.html"},{default:o(()=>s[58]||(s[58]=[n("code",null,"DownloadableTrack",-1)])),_:1}),s[66]||(s[66]=l(". This conversion allows you to ")),s[67]||(s[67]=n("strong",null,"fetch additional information",-1)),s[68]||(s[68]=l(", such as lyrics, genres, or any other data you may want to add."))]),s[133]||(s[133]=t('<p>This approach offers <strong>significant</strong> performance benefits. Instead of gathering all possible information during the search phase <em>- which might slow down the process —</em> you&#39;re only fetching detailed data when it&#39;s truly needed, i.e., when the user selects a track for download.</p><div class="hint-container info"><p class="hint-container-title">Note</p><p>Since you may have to process a lot of tracks, using <strong>parallelism</strong> is suggested to decrease the amount of time the user has to wait.</p></div><h4 id="avoid-duplicate-requests" tabindex="-1"><a class="header-anchor" href="#avoid-duplicate-requests"><span>Avoid Duplicate Requests:</span></a></h4>',3)),n("p",null,[s[74]||(s[74]=l("The intermediate step of using ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[69]||(s[69]=[n("code",null,"SearchResult",-1)])),_:1}),s[75]||(s[75]=l(" models is useful, but what if your initial search request ")),s[76]||(s[76]=n("strong",null,"already contains",-1)),s[77]||(s[77]=l(" some the information you need for your ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/DownloadableTrack.html"},{default:o(()=>s[70]||(s[70]=[n("code",null,"DownloadableTrack",-1)])),_:1}),s[78]||(s[78]=l("? To avoid redundant requests, you can store ")),s[79]||(s[79]=n("strong",null,"additional data",-1)),s[80]||(s[80]=l(" directly within the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[71]||(s[71]=[n("code",null,"SearchResult",-1)])),_:1}),s[81]||(s[81]=l(" model. This data can then be accessed later when converting the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResult.html"},{default:o(()=>s[72]||(s[72]=[n("code",null,"SearchResult",-1)])),_:1}),s[82]||(s[82]=l(" to a ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/DownloadableTrack.html"},{default:o(()=>s[73]||(s[73]=[n("code",null,"DownloadableTrack",-1)])),_:1}),s[83]||(s[83]=l(", ")),s[84]||(s[84]=n("strong",null,"preventing unnecessary",-1)),s[85]||(s[85]=l(" API calls."))]),s[134]||(s[134]=t(`<p>Here’s how you might implement this in your search method:</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#C0CAF5;">SearchResult</span><span style="color:#C0CAF5;"> result</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new(</span></span>
<span class="line"><span style="color:#C0CAF5;">    title</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    artists</span><span style="color:#89DDFF;">:</span><span style="color:#BB9AF7;"> string</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Join</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Artists</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Select</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">artist</span><span style="color:#89DDFF;"> =&gt;</span><span style="color:#C0CAF5;"> artist</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Name</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#C0CAF5;">    duration</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> TimeSpan</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">FromMilliseconds</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">DurationMs</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#C0CAF5;">    imageUrl</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> album</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Artwork</span><span style="color:#89DDFF;">?.</span><span style="color:#C0CAF5;">LowRes</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    items</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new()</span></span>
<span class="line"><span style="color:#89DDFF;">    {</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">ReleaseDate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> album</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">ReleaseDate</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">AlbumName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> album</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Name</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">TrackNumber</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">TrackNumber</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">ArtworkFullRes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> album</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Artwork</span><span style="color:#89DDFF;">?.</span><span style="color:#C0CAF5;">FullRes</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">    });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("p",null,[s[87]||(s[87]=l("When preparing the download, you can use the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/SearchResultExtensions.html#getitem"},{default:o(()=>s[86]||(s[86]=[n("code",null,"GetItem<T>",-1),l(" method")])),_:1}),s[88]||(s[88]=l(" to easily access these stored items:"))]),s[135]||(s[135]=t(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#C0CAF5;">DateTime</span><span style="color:#C0CAF5;"> releaseDate</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> searchResult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetItem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">DateTime</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ReleaseDate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;">string</span><span style="color:#C0CAF5;"> albumName</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> searchResult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetItem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">AlbumName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;">int</span><span style="color:#C0CAF5;"> trackNumber</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> searchResult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetItem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">int</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">TrackNumber</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">?</span><span style="color:#C0CAF5;"> artworkFullRes</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> searchResult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetItem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">?&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ArtworkFullRes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-3" tabindex="-1"><a class="header-anchor" href="#example-3"><span>Example</span></a></h4>`,2)),n("p",null,[s[90]||(s[90]=l("Since this example ")),s[91]||(s[91]=n("strong",null,"doesn't need",-1)),s[92]||(s[92]=l(" to send additional requests, the parallel processing is wrapped in ")),s[93]||(s[93]=n("code",null,"Task.Run",-1)),s[94]||(s[94]=l(" to ")),s[95]||(s[95]=n("strong",null,"avoid blocking",-1)),s[96]||(s[96]=l(" the UI. For an example that requires async preparing of ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/DownloadableTrack.html"},{default:o(()=>s[89]||(s[89]=[n("code",null,"DownloadableTrack",-1)])),_:1}),s[97]||(s[97]=l("'s, please take a look at ")),s[98]||(s[98]=n("a",{href:"https://github.com/IcySnex/Melora/blob/main/Plugins/Melora.PlatformSupport.Spotify/SpotifyPlugin.cs#L101-L126",target:"_blank",rel:"noopener noreferrer"},"this example",-1)),s[99]||(s[99]=l("."))]),s[136]||(s[136]=t(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> override</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">DownloadableTrack</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#7AA2F7;"> PrepareDownloadsAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">    IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">SearchResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> searchResults</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    IProgress</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BB9AF7;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C0CAF5;"> progress</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> default)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C0CAF5;">    logger</span><span style="color:#89DDFF;">?.</span><span style="color:#7AA2F7;">LogInformation</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">[SoundCloudPlugin-PrepareDownloadsAsync] Preparing search results for download...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">    SearchResult</span><span style="color:#89DDFF;">[]</span><span style="color:#C0CAF5;"> indexableSearchResults</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> searchResults</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">ToArray</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C0CAF5;">    DownloadableTrack</span><span style="color:#89DDFF;">[]</span><span style="color:#C0CAF5;"> results</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#C0CAF5;"> DownloadableTrack</span><span style="color:#89DDFF;">[</span><span style="color:#C0CAF5;">indexableSearchResults</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Length</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    await</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Run</span><span style="color:#89DDFF;">(()</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#C0CAF5;">        Parallel</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">For</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#FF9E64;">            0</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> indexableSearchResults</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Length</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">            index</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">            {</span></span>
<span class="line"><span style="color:#C0CAF5;">                cancellationToken</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">ThrowIfCancellationRequested</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C0CAF5;">                progress</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Report</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">$&quot;</span><span style="color:#9ECE6A;">Preparing downloads [</span><span style="color:#89DDFF;">{</span><span style="color:#C0CAF5;">index</span><span style="color:#89DDFF;">}</span><span style="color:#9ECE6A;">/</span><span style="color:#89DDFF;">{</span><span style="color:#C0CAF5;">indexableSearchResults</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Length</span><span style="color:#89DDFF;">}</span><span style="color:#9ECE6A;">]...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">                DownloadableTrack</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">PrepareDownload</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">indexableSearchResults</span><span style="color:#89DDFF;">[</span><span style="color:#C0CAF5;">index</span><span style="color:#89DDFF;">]);</span></span>
<span class="line"><span style="color:#BB9AF7;">                lock</span><span style="color:#89DDFF;"> (</span><span style="color:#C0CAF5;">results</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C0CAF5;">                    results</span><span style="color:#89DDFF;">[</span><span style="color:#C0CAF5;">index</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            }),</span></span>
<span class="line"><span style="color:#C0CAF5;">        cancellationToken</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#C0CAF5;"> results</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validate-1" tabindex="-1"><a class="header-anchor" href="#validate-1"><span>Validate:</span></a></h4><p>If you did everything correct, you should now be able to use the <strong>Download</strong> button to move your selected search results to the download queue.</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step-7-downloading" tabindex="-1"><a class="header-anchor" href="#step-7-downloading"><span>Step 7: Downloading</span></a></h3>',5)),n("p",null,[s[102]||(s[102]=l("The final step in completing your Platform-Support plugin is implementing the ")),s[103]||(s[103]=n("strong",null,"download functionality",-1)),s[104]||(s[104]=l(". For this, you'll need to override the ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html#getstreamasync"},{default:o(()=>s[100]||(s[100]=[n("code",null,"GetStreamAsync",-1),l(" method")])),_:1}),s[105]||(s[105]=l(" in your ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Abstract/PlatformSupportPlugin.html"},{default:o(()=>s[101]||(s[101]=[n("code",null,"PlatformSupportPlugin",-1)])),_:1}),s[106]||(s[106]=l(" class. This method is responsible for providing a stream of the audio data that the user wants to download."))]),n("p",null,[s[108]||(s[108]=l("This method should return a ")),s[109]||(s[109]=n("a",{href:"https://learn.microsoft.com/dotnet/api/system.io.stream",target:"_blank",rel:"noopener noreferrer"},[n("code",null,"Stream")],-1)),s[110]||(s[110]=l(" containing the audio data for the given ")),e(a,{to:"/plugin-api-reference/Melora.Plugins/Models/DownloadableTrack.html"},{default:o(()=>s[107]||(s[107]=[n("code",null,"DownloadableTrack",-1)])),_:1}),s[111]||(s[111]=l(". The format of this stream (e.g., MP3, OGG) is not important, as the audio will be ")),s[112]||(s[112]=n("strong",null,"reencoded",-1)),s[113]||(s[113]=l(" with ")),s[114]||(s[114]=n("a",{href:"https://www.ffmpeg.org/ffmpeg-codecs.html#Audio-Decoders",target:"_blank",rel:"noopener noreferrer"},"FFmpeg",-1)),s[115]||(s[115]=l(" later."))]),s[137]||(s[137]=t(`<h4 id="example-4" tabindex="-1"><a class="header-anchor" href="#example-4"><span>Example:</span></a></h4><p>Since the wrapper class handles the heavy lifting class in our little SoundCloud example, this method will just pass the track Id to the wrapper:</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#1a1b26;color:#a9b1d6;"><pre class="shiki tokyo-night vp-code"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">public</span><span style="color:#9D7CD8;font-style:italic;"> override</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">Stream</span><span style="color:#89DDFF;">&gt;</span><span style="color:#7AA2F7;"> GetStreamAsync</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">    DownloadableTrack</span><span style="color:#C0CAF5;"> track</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    CancellationToken</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> default)</span><span style="color:#89DDFF;"> =&gt;</span></span>
<span class="line"><span style="color:#C0CAF5;">    wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">GetStreamAsync</span><span style="color:#89DDFF;">(</span><span style="color:#C0CAF5;">track</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">Id</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> cancellationToken</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publishing" tabindex="-1"><a class="header-anchor" href="#publishing"><span>Publishing</span></a></h2><p>If you’ve followed the guide successfully, you should now be able to download <strong>any</strong> track from your platform seamlessly. Before you publish, make sure to test everything <strong>thoroughly</strong> to ensure that your plugin functions as expected.</p>`,5)),n("p",null,[s[118]||(s[118]=l("Once you’ve ")),s[119]||(s[119]=n("strong",null,"verified",-1)),s[120]||(s[120]=l(" that everything works ")),s[121]||(s[121]=n("strong",null,"properly",-1)),s[122]||(s[122]=l(", refer to the ")),e(a,{to:"/plugin-development/publishing.html"},{default:o(()=>s[116]||(s[116]=[l("Publishing Guide")])),_:1}),s[123]||(s[123]=l(" to list your plugin in the ")),e(a,{to:"/plugin-collection/platform-support.html"},{default:o(()=>s[117]||(s[117]=[l("official Melora Plugin Collection")])),_:1}),s[124]||(s[124]=l("."))])])}const m=p(d,[["render",D],["__file","platform-support.html.vue"]]),v=JSON.parse('{"path":"/plugin-development/platform-support.html","title":"Platform-Support","lang":"en-US","frontmatter":{"title":"Platform-Support","icon":"fe:music","order":5,"description":"This guide will walk you through the process of creating your own Melora Platform-Support plugins by using the integration of SoundCloud with Melora as an example. It is easily ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://localhost/Melora/plugin-development/platform-support.html"}],["meta",{"property":"og:site_name","content":"Melora"}],["meta",{"property":"og:title","content":"Platform-Support"}],["meta",{"property":"og:description","content":"This guide will walk you through the process of creating your own Melora Platform-Support plugins by using the integration of SoundCloud with Melora as an example. It is easily ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://localhost/Melora/plugin-development/platformsupport1.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Platform-Support\\",\\"image\\":[\\"https://localhost/Melora/plugin-development/platformsupport1.webp\\",\\"https://localhost/Melora/plugin-development/platformsupport2.webp\\",\\"https://localhost/Melora/plugin-development/platformsupport3.webp\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"IcySnex\\",\\"url\\":\\"https://github.com/IcySnex\\"}]}"]]},"headers":[{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Structure","slug":"structure","link":"#structure","children":[]},{"level":2,"title":"Implementing Your Plugin","slug":"implementing-your-plugin","link":"#implementing-your-plugin","children":[{"level":3,"title":"Step 1: The Manifest","slug":"step-1-the-manifest","link":"#step-1-the-manifest","children":[]},{"level":3,"title":"Step 2: The Plugin Class","slug":"step-2-the-plugin-class","link":"#step-2-the-plugin-class","children":[]},{"level":3,"title":"Step 3: The Constructors","slug":"step-3-the-constructors","link":"#step-3-the-constructors","children":[]},{"level":3,"title":"Step 4: Validate","slug":"step-4-validate","link":"#step-4-validate","children":[]},{"level":3,"title":"Step 5: Searching","slug":"step-5-searching","link":"#step-5-searching","children":[]},{"level":3,"title":"Step 6: Preparing For Download","slug":"step-6-preparing-for-download","link":"#step-6-preparing-for-download","children":[]},{"level":3,"title":"Step 7: Downloading","slug":"step-7-downloading","link":"#step-7-downloading","children":[]}]},{"level":2,"title":"Publishing","slug":"publishing","link":"#publishing","children":[]}],"readingTime":{"minutes":7.23,"words":2168},"filePathRelative":"plugin-development/platform-support.md","autoDesc":true}');export{m as comp,v as data};
